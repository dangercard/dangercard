{"version":3,"sources":["img/profile.png","components/NavBar.js","components/Home.js","components/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","isOpen","state","handleResize","windowWidth","window","innerWidth","addEventListener","bind","_this2","react_default","a","createElement","Navbar","dark","expand","className","Container","NavbarBrand","onClick","changePage","NavbarToggler","Collapse","navbar","Nav","NavItem","style","backgroundColor","NavLink","href","index_esm","Component","Home","Jumbotron","Button","AboutMe","toggleTab","tab","activeTab","fluid","Row","Col","sm","Card","CardImg","top","src","profileImg","CardBody","CardTitle","CardText","marginBottom","color","border","tabs","borderColor","TabContent","TabPane","tabId","marginTop","width","body","App","page","currentPage","components_Home","components_AboutMe","components_NavBar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b43a0e71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.2665415e.png\";","import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n} from \"reactstrap\";\nimport {FaGithub, FaInstagram} from 'react-icons/fa';\nimport '../App.css';\n\nclass NavBar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOpen: false,\n            windowWidth: window.innerWidth,\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    }\n\n    handleResize = () => {\n        this.setState({\n            windowWidth: window.innerWidth,\n        });\n    }\n\n    componentDidMount(){\n\n        // Constantly update state window width.\n        window.addEventListener('resize', this.handleResize.bind(this));\n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar dark expand=\"sm\" className=\"nav-bar\">\n                    <Container>\n                        <NavbarBrand className=\"nav-brand\" onClick={() => this.props.changePage(\"Home\")}>Alejandro Deloach</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n\n                            <Nav className=\"mr-auto\" navbar>\n                                <NavItem className=\"nav-item\" onClick={() => this.props.changePage(\"About Me\")} >\n                                    About Me\n                                </NavItem>\n                            </Nav>\n                            <hr className=\"my-2\" style={{backgroundColor:\"#6b6e70\"}}/>\n                            \n                            <Nav className=\"ml-auto\" navbar>   \n                                <NavItem>\n                                    <NavLink className=\"nav-link\" href=\"https://github.com/dangercard\">{(this.state.windowWidth <= 575) ? \"Github\" : <FaGithub/>}</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" href=\"https://www.instagram.com/alejandrodeloach/\">{(this.state.windowWidth <= 575) ? \"Instagram\" : <FaInstagram/>}</NavLink>\n                                </NavItem>\n                            </Nav>\n\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"../App.css\";\nimport { Jumbotron, Button } from \"reactstrap\";\n\nfunction Home() {\n  return (\n    <Jumbotron className=\"jumb\">\n      <h1 className=\"home-title\">Welcome!</h1>\n\n      <p className=\"lead home-text\">\n        This is a simple portfolio page built using React and Reactstrap.\n        Besides my information, you can find a variety of random things to play\n        with.\n      </p>\n\n      <hr className=\"my-2\" style={{ backgroundColor: \"#6b6e70\" }} />\n\n      <p className=\"home-text\">\n        If you're interested in seeing the code for this page, click the button\n        below to see the repo.\n      </p>\n\n      <p className=\"lead\">\n        <Button className=\"btn-green\">Learn More</Button>\n      </p>\n    </Jumbotron>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  Button,\n  CardTitle,\n  CardImg,\n  CardBody,\n  CardText,\n  Row,\n  Col,\n  Container,\n} from \"reactstrap\";\nimport \"../App.css\";\nimport {FaPhone, FaEnvelope} from 'react-icons/fa';\nimport profileImg from '../img/profile.png';\n\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"1\",\n    };\n  }\n\n  toggleTab = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row >\n          <Col sm=\"3\">\n            <Card className=\"profile-card\">\n              <CardImg\n                top    \n                src={profileImg}\n              />\n              <CardBody className=\"card-body\">\n                <CardTitle>Alejandro Deloach Rivera</CardTitle>\n                <hr className=\"my-2\" style={{ backgroundColor: \"#6b6e70\" }}/>\n                <CardText style={{marginBottom:\"-12px\"}}>\n                  <FaPhone style={{color:\"#86c232\"}}/> (787)-372-6864\n                  <br/>\n                  <FaEnvelope style={{color:\"white\"}}/> alex.deloach9@gmail.com\n                </CardText>\n                {/* <Button>Button</Button> */}\n              </CardBody>\n            </Card>\n          </Col>\n          <Col sm=\"9\">\n            <div style={{ border: \"1px solid #6b6e70\" }}>\n              <Nav tabs style={{borderColor:\"#6b6e70\"}}>\n                <NavItem>\n                  <NavLink\n                    className=\"tab-link\"\n                    onClick={() => {\n                      this.toggleTab(\"1\");\n                    }}\n                  >\n                    Bio\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"tab-link\"\n                    onClick={() => {\n                      this.toggleTab(\"2\");\n                    }}\n                  >\n                    Moar Tabs\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId=\"1\">\n                  <Row>\n                    <Col sm=\"12\">\n                      <h4 className=\"tab-text\" style={{marginTop:\"5px\"}}>Introduction</h4>\n                      <p className=\"tab-text\">\n                          Hello! My name is Alejandro. I'm a Puerto Rican\n                        web developer living in San Juan PR. My hobbies include reading on history\n                        and philosophy, painting and modifying consoles (mostly from the Gameboy\n                        family), and playing videogames both old and new. I worked mainly with PHP\n                        for 4 years, but now I'm focusing on React JS, MongoDB and Node JS after\n                        realizing how much I enjoy Javascript.   \n                      </p>\n\n                      <hr className=\"my-2\" style={{ backgroundColor: \"#6b6e70\", width:\"90%\" }}/>\n\n                      <h4 className=\"tab-text\" style={{marginTop:\"5px\"}}>Education</h4>\n                      <p className=\"tab-text\">\n                        Bachelor's degree in Computer Science from the University of \n                        Puerto Rico, Rio Piedras Campus.   \n                      </p>\n                    </Col>\n                  </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                  <Row>\n                    <Col sm=\"6\">\n                      <Card body>\n                        <CardTitle>Special Title Treatment</CardTitle>\n                        <CardText>\n                          With supporting text below as a natural lead-in to\n                          additional content.\n                        </CardText>\n                        <Button>Go somewhere</Button>\n                      </Card>\n                    </Col>\n                    <Col sm=\"6\">\n                      <Card body>\n                        <CardTitle>Special Title Treatment</CardTitle>\n                        <CardText>\n                          With supporting text below as a natural lead-in to\n                          additional content.\n                        </CardText>\n                        <Button>Go somewhere</Button>\n                      </Card>\n                    </Col>\n                  </Row>\n                </TabPane>\n              </TabContent>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React, {Component} from 'react';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport AboutMe from './components/AboutMe';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Iframe from 'react-iframe';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentPage: \"Home\",\n    }\n  }\n\n  changePage = (page) => {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render(){\n    let page;\n    if(this.state.currentPage === \"Home\")\n    {\n      page = <Home/>;\n    }\n    else if(this.state.currentPage === \"About Me\")\n    {\n      // page = <Iframe url=\"http://www.youtube.com/embed/?listType=user_uploads&list=Thefearalcarrot\"\n      // width=\"800px\"\n      // height=\"450px\"\n      // id=\"myId\"\n      // display=\"initial\"\n      // position=\"relative\"/>;\n      page = <AboutMe/>;\n    }\n    return (\n      <div className=\"App\">\n        <NavBar changePage={this.changePage}/>\n          {page}\n       \n      </div>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}